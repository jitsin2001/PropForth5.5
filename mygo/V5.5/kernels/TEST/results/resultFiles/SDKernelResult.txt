
 scriptFileName: TEST/scripts/SDKernel.txt
   logFileName: TEST/results/runLogs/SDKernelRunLog.txt
resultFileName: TEST/results/resultFiles/SDKernelResult.txt
outputFileName: 
[ifndef stOverflow 
Prop0 Cog6 ok
: stOverflow d32 0 do i dup . loop ; 
Prop0 Cog6 ok
] 
Prop0 Cog6 ok
[ifndef rsUnderflow 
Prop0 Cog6 ok
: rsUnderflow r> . r> . r> . r> . r> . r> . r> . ; 
Prop0 Cog6 ok
] 
Prop0 Cog6 ok
[ifndef rsOverflow 
Prop0 Cog6 ok
: rsOverflow dup . 1+ c" rsOverflow" find drop execute ; 
Prop0 Cog6 ok
] 
Prop0 Cog6 ok
[ifndef cogdel 
Prop0 Cog6 ok
: cogdel cogid 1+ 1 lshift 0 do d_1000 i u* delms i . loop ." delay done~h0D" ; 
Prop0 Cog6 ok
] 
Prop0 Cog6 ok

Prop0 Cog6 ok
cr cr here W@ . version W@ .cstr 


23768 PropForth v5.5 2013Feb20 11:30 0Prop0 Cog6 ok
[ifdef cog? 
Prop0 Cog6 ok
cog? 
Cog:0  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:1  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:2  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:3  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:4  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:5  #io chan:1 PropForth v5.5 2013Feb20 11:30 0
Cog:6  #io chan:1 PropForth v5.5 2013Feb20 11:30 0  6(0)->7(0)
Cog:7  #io chan:1                           SERIAL  7(0)->6(0)
Prop0 Cog6 ok
] 
Prop0 Cog6 ok
[ifdef build? 
Prop0 Cog6 ok
build? 

NFA (Forth/Asm Immediate eXecute) Name
20_566 F   build_sdfs           19_816 F   build_sdrun          18_366 F   build_sdinit         17_598 F   build_sdcommon       
13_240 F   build_DevKernel      10_510 F   build_BootOpt        02_690 F   build_BootKernel     

PropForth v5.5 2013Feb20 11:30 0
Prop0 Cog6 ok
] 
Prop0 Cog6 ok
cr cr 


Prop0 Cog6 ok

Prop0 Cog6 ok
cr cr 1 2 3 . . . drop drop drop


3 2 1 
CON:Prop0 Cog6 RESET - last status: 3 MAIN STACK UNDERFLOW

Prop0 Cog6 RESET - last status: 3 MAIN STACK UNDERFLOW
Prop0 Cog6 ok
cr cr stOverflow


0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 
CON:Prop0 Cog6 RESET - last status: 1 MAIN STACK OVERFLOW

Prop0 Cog6 RESET - last status: 1 MAIN STACK OVERFLOW
Prop0 Cog6 ok
cr cr rsUnderflow


9180 9376 10136 
CON:Prop0 Cog6 RESET - last status: 4 RETURN STACK UNDERFLOW

Prop0 Cog6 RESET - last status: 4 RETURN STACK UNDERFLOW
Prop0 Cog6 ok
cr cr 0 rsOverflow


0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 
CON:Prop0 Cog6 RESET - last status: 2 RETURN STACK OVERFLOW

Prop0 Cog6 RESET - last status: 2 RETURN STACK OVERFLOW
Prop0 Cog6 ok
cr cr d_1234 dup . d_2468 - dup . d-2468 - dup . d_1234 + dup . d-1234 + dup . .


1234 -1234 1234 2468 1234 1234 Prop0 Cog6 ok
cr cr d_99999 d_1234 u* dup . d_5678 u/mod . . d_99900 d_456 u* d_1000 u/ .


123398766 21732 4470 45554 Prop0 Cog6 ok
base W@ -1 hAAAA and hex dup . hFF or . cr base W!
AAAA AAFF 
Prop0 Cog6 ok
[ifndef build_httpserver 
Prop0 Cog6 ok
lockdict cr cr wvariable ttt : d ttt W@ . ; hex 


Prop0 Cog6 ok
cr cr 0 ttt W! 23 ttt orC! d 1 ttt andnC! d 


23 22 Prop0 Cog6 ok
cr cr -1 ttt W! d hAAAA ttt W@ and ttt W! d hFF ttt orC! d hA base W! freedict 


FFFF AAAA AAFF Prop0 Cog6 ok
]
Prop0 Cog6 ok

Prop0 Cog6 ok

 scriptFileName: TEST/scripts/SDKernel.txt
   logFileName: TEST/results/runLogs/SDKernelRunLog.txt
resultFileName: TEST/results/resultFiles/SDKernelResult.txt
outputFileName: 
mountsys
Prop0 Cog6 ok
ls
390 usrboot.f
491 .partion-sys/
130 .sdcardinfo
133 sdboot.f
Prop0 Cog6 ok
fread sdboot.f

hA state orC! cr

c" sdboot.f  -  initializing~h0D~h0D" .cstr
1 sd_mount

[ifndef mountsys
: mountsys sd_init 0000000001 sd_mount ; 
]
\ mountusr ( -- ) mount the user disk
[ifndef mountusr
: mountusr sd_init 65538 sd_mount ; 
]
c" sdboot.f  -  Loading usrboot.f~h0D~h0D" .cstr

fload usrboot.f
c" sdboot.f  -  DONE - PropForth Loaded ~h0D~h0D" .cstr

hA state andnC!

Prop0 Cog6 ok
\ some simple files for testing
Prop0 Cog6 ok
1 fwrite demo
mountsys
fload hello.f
fload bye.f
fload aloha.f
Prop0 Cog6 ok
1 fwrite hello.f
\ hello ( --)
: hello ." Hello world" cr ;
Prop0 Cog6 ok
1 fwrite bye.f
\ bye ( --)
: bye ." Goodbye world" cr ;
Prop0 Cog6 ok
1 fwrite aloha.f
\ aloha ( t/f -- )
: aloha if ." Hello" else ." Goodbye" then ." world" cr ;
Prop0 Cog6 ok
\ end of example files
Prop0 Cog6 ok
ls
390 usrboot.f
626 aloha.f
491 .partion-sys/
620 demo
130 .sdcardinfo
622 hello.f
624 bye.f
133 sdboot.f
Prop0 Cog6 ok
fload demo
Prop0 Cog5 ok
fload hello.f
Prop0 Cog4 ok
: hello ." Hello world" cr ;
Prop0 Cog4 ok

Prop0 Cog5 ok
fload bye.f
Prop0 Cog4 ok
: bye ." Goodbye world" cr ;
Prop0 Cog4 ok

Prop0 Cog5 ok
fload aloha.f
Prop0 Cog4 ok
: aloha if ." Hello" else ." Goodbye" then ." world" cr ;
Prop0 Cog4 ok

Prop0 Cog5 ok

Prop0 Cog6 ok
0 aloha
Goodbyeworld
Prop0 Cog6 ok
1 aloha
Helloworld
Prop0 Cog6 ok

 scriptFileName: TEST/scripts/SDKernel.txt
   logFileName: TEST/results/runLogs/SDKernelRunLog.txt
resultFileName: TEST/results/resultFiles/SDKernelResult.txt
outputFileName: 
